@using BusinessLayer.DTOs.Book.View;
@using DataAccessLayer.Models.Enums;
@model MVC.Models.Book.FilteredBooksModel


<h1>Books</h1>

@if (User.IsInRole(UserRoles.Admin))
{
    <p class="text-end"><a class="link-success" asp-action="Create">Create New</a></p>
}

@if (ViewBag.Message != null)
{
    <p class="alert alert-success" role="alert">
        @ViewBag.Message
    </p>
}

@{
    await Html.RenderPartialAsync("BookSearch", Model.SearchBooksModel ?? new MVC.Models.Book.BookSearchModel());
}



<table class="table">
    <tr>
        <th>
            Title
        </th>
        <th>
            Primary Author
        </th>
        <th>
            Publisher
        </th>
        <th>
            Genre
        </th>
        <th>
            Price
        </th>
        <th></th>
    </tr>


    @if (Model != null && Model.Books.Count() > 0)
    {
        foreach (var item in Model.Books)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookGenre)
                </td>
                <td>
                    @(item.Price + " EUR")
                </td>
                <td class="text-end">
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "link-primary" })
                    @if (User.IsInRole(UserRoles.Admin))
                    {
                        <span>|</span>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "link-warning" })
                        <span>|</span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "link-danger" })
                    }
                </td>
            </tr>
        }
    }
    else
    {
        <td colspan="6" class="text-center"><b>No Books Availible. Please Add Data By Clicking On The Create Button</b></td>

    }
</table>

@if (Model != null)
{
    <div class="pagination">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a asp-action="Index"
               asp-route-PageNumber="@i"
               asp-route-CONTAINS_Title="@Model.SearchBooksModel?.CONTAINS_Title"
               asp-route-Author="@Model.SearchBooksModel?.Author"
               asp-route-Publisher="@Model.SearchBooksModel?.Publisher"
               asp-route-CONTAINS_Description="@Model.SearchBooksModel?.CONTAINS_Description"
               asp-route-BookGenre="@Model.SearchBooksModel?.BookGenre"
               asp-route-GE_Price="@Model.SearchBooksModel?.GE_Price"
               asp-route-LE_Price="@Model.SearchBooksModel?.LE_Price"
               asp-route-SortParameter="@Model.SearchBooksModel?.SortParameter"
               asp-route-SortAscending="@Model.SearchBooksModel?.SortAscending"
               class="@(i == Model.PageNumber ? "active" : "")">@($" {i}{(i == Model.TotalPages ? string.Empty : ',')} ")</a>
        }
    </div>
}
